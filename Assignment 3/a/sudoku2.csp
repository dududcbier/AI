variables:
sudoku[9][9] : integer;

domains:
sudoku <- [1..9];

constraints:
#Sudoku Rules

forall(i in [0..8])
	#Rows
	alldiff(sudoku[i]);

	#Columns
	alldiff(sudoku[0][i], 
			sudoku[1][i], 
			sudoku[2][i], 
			sudoku[3][i], 
			sudoku[4][i],
			sudoku[5][i],
			sudoku[6][i],
			sudoku[7][i],
			sudoku[8][i]);

	#Squares
	alldiff(sudoku[0 + 3 * (i div 3)][0 + 3 * (i mod 3)],
			sudoku[0 + 3 * (i div 3)][1 + 3 * (i mod 3)],
			sudoku[0 + 3 * (i div 3)][2 + 3 * (i mod 3)],
			sudoku[1 + 3 * (i div 3)][0 + 3 * (i mod 3)], 
			sudoku[1 + 3 * (i div 3)][1 + 3 * (i mod 3)], 
			sudoku[1 + 3 * (i div 3)][2 + 3 * (i mod 3)],
			sudoku[2 + 3 * (i div 3)][0 + 3 * (i mod 3)], 
			sudoku[2 + 3 * (i div 3)][1 + 3 * (i mod 3)], 
			sudoku[2 + 3 * (i div 3)][2 + 3 * (i mod 3)]);
end

#Initial Board
sudoku[0][7] = 1;
sudoku[0][8] = 2;

sudoku[1][8] = 3;

sudoku[2][2] = 2;
sudoku[2][3] = 3;
sudoku[2][6] = 4;

sudoku[3][2] = 1;
sudoku[3][3] = 8;
sudoku[3][8] = 5;

sudoku[4][1] = 6;
sudoku[4][4] = 7;
sudoku[4][6] = 8;

sudoku[5][5] = 9;

sudoku[6][2] = 8;
sudoku[6][3] = 5;

sudoku[7][0] = 9;
sudoku[7][4] = 4;
sudoku[7][6] = 5;

sudoku[8][0] = 4;
sudoku[8][1] = 7;
sudoku[8][5] = 6;

solutions:1
